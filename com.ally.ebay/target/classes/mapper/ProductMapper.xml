<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ally.ebay.dao.ProductMapper">
	<resultMap id="BaseResultMap" type="com.ally.ebay.bean.Product">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="price" jdbcType="DOUBLE" property="price" />
		<result column="quanTity" jdbcType="INTEGER" property="quantity" />
		<result column="picture" jdbcType="VARCHAR" property="picture" />
		<result column="SKU" jdbcType="CHAR" property="sku" />
		<result column="cid" jdbcType="INTEGER" property="cid" />
	</resultMap>
	<resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
		type="com.ally.ebay.bean.Product">
		<result column="describes" jdbcType="LONGVARCHAR" property="describes" />
	</resultMap>
	<resultMap id="WithCategoryResultMap" type="com.ally.ebay.bean.Product">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="price" jdbcType="DOUBLE" property="price" />
		<result column="quanTity" jdbcType="INTEGER" property="quantity" />
		<result column="picture" jdbcType="VARCHAR" property="picture" />
		<result column="SKU" jdbcType="CHAR" property="sku" />
		<result column="cid" jdbcType="INTEGER" property="cid" />
		<association property="category" javaType="com.ally.ebay.bean.Category">
			<id column="c_id" property="id" />
			<id column="c_name" property="name" />
		</association>
	</resultMap>
	<resultMap extends="WithCategoryResultMap" id="WithCategoryResultMapWithBLOBs"
		type="com.ally.ebay.bean.Product">
		<result column="describes" jdbcType="LONGVARCHAR" property="describes" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, price, quanTity, picture, SKU, cid
	</sql>
	<sql id="Blob_Column_List">
		describes
	</sql>
	<sql id="WithCategory_column_list">
		p.id, p.name, p.price, p.quanTity, p.picture, p.SKU, p.cid, c.id AS c_id, c.name  AS c_name
	</sql>
	<!--  List<Product> selectByExampleWithBLOBsWithCategory(ProductExample example);

    List<Product> selectByExampleWithCategory(ProductExample example);

    Product selectByPrimaryKeyWithCategory(Integer id); -->
    <select id="selectByExampleWithBLOBsWithCategory" 
		resultMap="WithCategoryResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="WithCategory_column_list" />
		,
		<include refid="Blob_Column_List" />
		from product p
		left join category c
		on p.cid = c.id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExampleWithCategory" 
		resultMap="WithCategoryResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="WithCategory_column_list" />
		from product p
		left join category c
		on p.cid = c.id
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKeyWithCategory" parameterType="java.lang.Integer"
		resultMap="WithCategoryResultMapWithBLOBs">
		select
		<include refid="WithCategory_column_list" />
		,
		<include refid="Blob_Column_List" />
		from product p
		left join category c
		on p.cid = c.id
		where p.id = #{id,jdbcType=INTEGER}
	</select>
	
	
	<select id="selectByExampleWithBLOBs" parameterType="com.ally.ebay.bean.ProductExample"
		resultMap="ResultMapWithBLOBs">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" parameterType="com.ally.ebay.bean.ProductExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="ResultMapWithBLOBs">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from product
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from product
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample" parameterType="com.ally.ebay.bean.ProductExample">
		delete from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.ally.ebay.bean.Product">
		insert into product (id, name, price,
		quanTity, picture, SKU,
		cid, describes)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{price,jdbcType=DOUBLE},
		#{quantity,jdbcType=INTEGER}, #{picture,jdbcType=VARCHAR}, #{sku,jdbcType=CHAR},
		#{cid,jdbcType=INTEGER}, #{describes,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ally.ebay.bean.Product">
		insert into product
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="price != null">
				price,
			</if>
			<if test="quantity != null">
				quanTity,
			</if>
			<if test="picture != null">
				picture,
			</if>
			<if test="sku != null">
				SKU,
			</if>
			<if test="cid != null">
				cid,
			</if>
			<if test="describes != null">
				describes,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				#{price,jdbcType=DOUBLE},
			</if>
			<if test="quantity != null">
				#{quantity,jdbcType=INTEGER},
			</if>
			<if test="picture != null">
				#{picture,jdbcType=VARCHAR},
			</if>
			<if test="sku != null">
				#{sku,jdbcType=CHAR},
			</if>
			<if test="cid != null">
				#{cid,jdbcType=INTEGER},
			</if>
			<if test="describes != null">
				#{describes,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="com.ally.ebay.bean.ProductExample"
		resultType="java.lang.Long">
		select count(*) from product
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update product
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.price != null">
				price = #{record.price,jdbcType=DOUBLE},
			</if>
			<if test="record.quantity != null">
				quanTity = #{record.quantity,jdbcType=INTEGER},
			</if>
			<if test="record.picture != null">
				picture = #{record.picture,jdbcType=VARCHAR},
			</if>
			<if test="record.sku != null">
				SKU = #{record.sku,jdbcType=CHAR},
			</if>
			<if test="record.cid != null">
				cid = #{record.cid,jdbcType=INTEGER},
			</if>
			<if test="record.describes != null">
				describes = #{record.describes,jdbcType=LONGVARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update product
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DOUBLE},
		quanTity = #{record.quantity,jdbcType=INTEGER},
		picture = #{record.picture,jdbcType=VARCHAR},
		SKU = #{record.sku,jdbcType=CHAR},
		cid = #{record.cid,jdbcType=INTEGER},
		describes = #{record.describes,jdbcType=LONGVARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update product
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		price = #{record.price,jdbcType=DOUBLE},
		quanTity = #{record.quantity,jdbcType=INTEGER},
		picture = #{record.picture,jdbcType=VARCHAR},
		SKU = #{record.sku,jdbcType=CHAR},
		cid = #{record.cid,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.ally.ebay.bean.Product">
		update product
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="price != null">
				price = #{price,jdbcType=DOUBLE},
			</if>
			<if test="quantity != null">
				quanTity = #{quantity,jdbcType=INTEGER},
			</if>
			<if test="picture != null">
				picture = #{picture,jdbcType=VARCHAR},
			</if>
			<if test="sku != null">
				SKU = #{sku,jdbcType=CHAR},
			</if>
			<if test="cid != null">
				cid = #{cid,jdbcType=INTEGER},
			</if>
			<if test="describes != null">
				describes = #{describes,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ally.ebay.bean.Product">
		update product
		set name = #{name,jdbcType=VARCHAR},
		price = #{price,jdbcType=DOUBLE},
		quanTity = #{quantity,jdbcType=INTEGER},
		picture = #{picture,jdbcType=VARCHAR},
		SKU = #{sku,jdbcType=CHAR},
		cid = #{cid,jdbcType=INTEGER},
		describes = #{describes,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ally.ebay.bean.Product">
		update product
		set name = #{name,jdbcType=VARCHAR},
		price = #{price,jdbcType=DOUBLE},
		quanTity = #{quantity,jdbcType=INTEGER},
		picture = #{picture,jdbcType=VARCHAR},
		SKU = #{sku,jdbcType=CHAR},
		cid = #{cid,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>